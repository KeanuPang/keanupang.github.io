<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>webview on Living today for tomorrow</title><link>https://keanupang.github.io/tags/webview/</link><description>Recent content in webview on Living today for tomorrow</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 22 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://keanupang.github.io/tags/webview/index.xml" rel="self" type="application/rss+xml"/><item><title>幾個 WebView 互動功能筆記</title><link>https://keanupang.github.io/posts/ios-webview-note/</link><pubDate>Tue, 22 Mar 2022 00:00:00 +0000</pubDate><guid>https://keanupang.github.io/posts/ios-webview-note/</guid><description>好像只有在亞洲地區才流行這樣的組合，也就是從 native app 畫面開 web view 切到行銷活動網頁，再透過 javascript 方式跟 app 互動之後回到 app 裡進行後面的導頁與串行銷資料。
同步切換 app 畫面標題 為了要讓 webView 載入的網頁標題也能貼回到 App 裡的 navigation bar 上，所以在 viewDidLoad() 的時候，加上 addObserver：
webView.addObserver(self, forKeyPath: #keyPath(WKWebView.title), options: .new, context: nil) 為了避免 leak，若有開啟 addObserver 更新 title 的話，在 ViewController dismiss 時要移除掉：
webView.removeObserver(self, forKeyPath: &amp;#34;title&amp;#34;) 顯示與取消 Loading 對應到 WKNavigationDelegate 可以透過下方兩個 methods 顯示或取消自訂的 loading view：
func webView(_ webView: WKWebView, didStartProvisionalNavigation navigation: WKNavigation!) { guard isBeingDismissed || isMovingFromParent else { // present loading view return } } func webView(_ webView: WKWebView, didFinish navigation: WKNavigation!</description></item></channel></rss>